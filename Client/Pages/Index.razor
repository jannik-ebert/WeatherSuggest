@page "/"
@using BlazorBootstrap
@using Newtonsoft.Json
@using System.Globalization
@using WeatherSuggest.Client.Components
@using WeatherSuggest.Shared.DTOs
@inject HttpClient httpClient

<div class="body">
    <div class="ripple-background">
      <div class="circle xxlarge shade1"></div>
      <div class="circle xlarge shade2"></div>
      <div class="circle large shade3"></div>
      <div class="circle medium shade4"></div>
      <div class="circle small shade5"></div>
    </div>
    <div class="icon">
        <a href="/" style="text-decoration: none;">
            <Icon Name="IconName.Clouds" Size="IconSize.x6" Color="IconColor.Light" />
        </a>
    </div>
    <div class="searchbox">
        @if (weatherData == null)
        {
            <Searchbox @bind-Results="locations" />
        }
    </div>
    <div class="location-cards">
        @if (locations != null && locations.Any() && weatherData == null)
        {
            @foreach (var location in locations)
            {
                <LocationCard 
                    Location="location" 
                    OnLocationClick="async () => await GetWeatherDataAsync(location.Lat.ToString(CultureInfo.InvariantCulture), location.Lon.ToString(CultureInfo.InvariantCulture))" 
                />
            }
        }
    </div>
    <div class="weather-card">
        @if (weatherData != null)
        {
            <WeatherCard WeatherData="weatherData" OnChangeLocation="ChangeLocation" />
        }
    </div>
    <div class="footer">
        <p>WeatherSuggest</p>
    </div>
</div>

@code {
    public List<GeoResponseDto>? locations;
    public WeatherResponseDto? weatherData;

    private async Task GetWeatherDataAsync(string lat, string lon)
    {
        try
        {
            var response = await httpClient.GetStringAsync($"api/weather?lat={lat}&lon={lon}");

            if (response != null)
            {
                weatherData = JsonConvert.DeserializeObject<WeatherResponseDto>(response);
                StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    private void ChangeLocation()
    {
        weatherData = null;
        locations = null;
    }
}